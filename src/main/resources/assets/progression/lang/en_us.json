{
  "progression.trigger": "Requirements",
  "progression.new.trigger": "Add New Requirement",
  "progression.trigger.achievement": "Achievement",
  "progression.trigger.achievement.id": "Achievement ID",
  "progression.trigger.achievement.description": "Achievement Get!",
  "progression.trigger.attack": "Attack Entity",
  "progression.trigger.attack.description": "Attack %s x any of these entities",
  "progression.trigger.attack.amount": "Amount of entities needed to be attacked",
  "progression.trigger.attack.entities": "Click to open the entity filtering editor\\n\\nWhich allows you to pick the entities that qualify",
  "progression.trigger.boolean": "True/False",
  "progression.trigger.boolean.variable": "The 'ID' of the True/False value that you wish to check",
  "progression.trigger.boolean.isTrue": "Whether you are checking if the statement is true or false",
  "progression.trigger.boolean.description": "The description you wish to display for this trigger in display mode",
  "progression.trigger.boolean.displayWidth": "The width of this trigger in display mode",
  "progression.trigger.breakBlock": "Break Block",
  "progression.trigger.breakBlock.cancel": "You cannot break any of these blocks",
  "progression.trigger.breakBlock.description": "Break any of the blocks displayed %s times",
  "progression.trigger.breakBlock.cancel": "Marking this as true will cancel the trigger, so that any block that matches cannot be broken",
  "progression.trigger.breakBlock.amount": "This is the number of blocks that need to be broken to complete this task",
  "progression.trigger.changeDimension": "Dimension",
  "progression.trigger.changeDimension.go": "Go to",
  "progression.trigger.changeDimension.leave": "Leave",
  "progression.trigger.changeDimension.change": "Change Dimension",
  "progression.trigger.changeDimension.checkFrom": "Whether to check the dimension the player is travelling from",
  "progression.trigger.changeDimension.from": "The dimension id of the dimension that you wish to check the player is travelling from \\n\\nIgnored if checkFrom is false",
  "progression.trigger.changeDimension.checkTo": "Whether to check the dimension the player is travelling to",
  "progression.trigger.changeDimension.to": "The dimension id of the dimension that you wish to check the player is travelling to\\n\\nIgnored if checkTo is false",
  "progression.trigger.changeDimension.amount": "Number of times the dimension change must have occurred",
  "progression.trigger.chat": "On Chat",
  "progression.trigger.chat.description": "Type the following text in to chat, * = anything\\n%s",
  "progression.trigger.chat.toMatch": "The string you wish to validate against.\\n You can use * on the left or right of the string if you do not care about what appears, e.g. gamemode* would trigger for any change of game mode.",
  "progression.trigger.chat.cancel": "Marking this as true will cancel the trigger, so that the chat/command will fail",
  "progression.trigger.openContainer": "Gui Change",
  "progression.trigger.openContainer.className": "This the class name of the gui you want to check has been opened. If you want to find out the name of a gui, simply type the command /progression gui , This command will post the name to the chat window, and to the logger.\\n\\nA gui change trigger must exist for this to work.",
  "progression.trigger.openContainer.description": "This is what you wish to be written as the description for users to complete the task",
  "progression.trigger.openContainer.displayWidth": "This is how wide this display box is, in display mode, you may want to increase it if you have a long description.",
  "progression.trigger.clickBlock": "Click Block",
  "progression.trigger.clickBlock.cancel": "Clicking any of these blocks will not work",
  "progression.trigger.clickBlock.description": "Click on any of the blocks displayed %s times",
  "progression.trigger.clickBlock.cancel": "Marking this as true will cancel the trigger, so that any block that matches cannot be clicked",
  "progression.trigger.clickBlock.amount": "This is the number of blocks that need to be clicked to complete this task",
  "progression.trigger.crafting": "Crafting",
  "progression.trigger.crafting.description": "Craft any of these items %s times",
  "progression.trigger.crafting.timesCrafted": "This checks how many times the player has actually crafted. E.g. Crafting stairs will increase this counter by 1 point",
  "progression.trigger.crafting.amount": "This checks how many items the player has actually crafted. E.g. Crafting stairs will increase this counter by 4 points",
  "progression.trigger.kill": "Kill",
  "progression.trigger.kill.description": "Kill %s x any of these entities",
  "progression.trigger.kill.amount": "Amount of entities needed to be killed",
  "progression.trigger.kill.entities": "Click to open the entity filtering editor\\n\\nWhich allows you to pick the entities that qualify",
  "progression.trigger.login": "Login",
  "progression.trigger.login.description": "Login %s times",
  "progression.trigger.login.amount": "Amount of times logged in needed to activate",
  "progression.trigger.onEaten": "On Eaten",
  "progression.trigger.onEaten.description": "Consume any of these items %s times",
  "progression.trigger.onEaten.amount": "Number of times you need to have eaten/consumed the displayed item",
  "progression.trigger.points": "Points",
  "progression.trigger.points.description": "Have %s %s %s",
  "progression.trigger.points.extra": "%s will be consumed",
  "progression.trigger.points.amount": "The amount of points required",
  "progression.trigger.points.consume": "If true, points will be consumed",
  "progression.trigger.points.variable": "The 'ID' of the points",
  "progression.trigger.sleep": "On Wake Up",
  "progression.trigger.sleep.description": "When you wake up from sleep %s times",
  "progression.trigger.tick": "On Second",
  "progression.trigger.tick.description": "Checked every second",


  "progression.condition": "Conditions",
  "progression.display.condition": "View Conditions",
  "progression.editor.condition": "Conditions",
  "progression.new.condition": "Add New Condition",
  "progression.condition.achievement": "Has Achievement",
  "progression.condition.achievement.id": "The ID of the achievement to check for",
  "progression.condition.achievement.description": "Achievement Has!",
  "progression.condition.achievement.description.inverted": "Achievement No Has!",
  "progression.condition.biomeType": "Biome Type",
  "progression.condition.biomeType.biomeTypes": "This is a comma seperated list of biomes, accepted values are: hot, cold, sparse, dense, wet, dry, savanna, coniferous, jungle, spooky, dead, lush, nether, end, mushroom, magical, ocean, river, water, mesa, forest, plains, mountain, hills, swamp, sandy, snowy, wasteland, beach",
  "progression.condition.biomeType.description": "You need to be in one of the following biomes: %s",
  "progression.condition.biomeType.description.inverted": "You can't be in one of the following biomes: %s",
  "progression.condition.boolean": "Has True/False",
  "progression.condition.boolean.variable": "The 'ID' of the True/False value that you wish to check",
  "progression.condition.boolean.isTrue": "Whether you are checking if the statement is true or false",
  "progression.condition.boolean.description": "The description you wish to display for this trigger in display mode",
  "progression.condition.boolean.displayWidth": "The width of this trigger in display mode",
  "progression.condition.chance": "Chance",
  "progression.condition.chance.chance": "This is a percentage, so if you put 50, this condition should be true 50% of the time.",
  "progression.condition.chance.description": "%s%% chance to happen",
  "progression.condition.ifHasXP": "Has XP",
  "progression.condition.ifHasXP.equal": "You need to have exactly %s XP",
  "progression.condition.ifHasXP.greater": "You need to have more than %s XP",
  "progression.condition.ifHasXP.greater.equal": "You need to have %s XP or more",
  "progression.condition.ifHasXP.lesser": "You need to have less than %s XP",
  "progression.condition.ifHasXP.lesser.equal": "You need to have %s XP or less",
  "progression.condition.ifHasXP.equal.inverted": "You need to not have exactly %s XP",
  "progression.condition.ifHasXP.greater.inverted": "You need to have %s XP or less",
  "progression.condition.ifHasXP.greater.equal.inverted": "You need have less than %s XP",
  "progression.condition.ifHasXP.lesser": "You need to have %s XP or more",
  "progression.condition.ifHasXP.lesser.equal": "You need to more than %s XP",
  "progression.condition.ifHasXP.amount": "The number you are validating against",
  "progression.condition.ifHasXP.amount.greaterThan": "Whether the player should have more XP than listed (conflicts with lesserThan)",
  "progression.condition.ifHasXP.amount.isEqualTo": "Whether the player should have exactly the amount of XP listed",
  "progression.condition.ifHasXP.amount.lesserThan": "Whether the player should have less than the XP listed (conflicts with greaterThan)",
  "progression.condition.ifHasXP.checkLevel": "If this is true, this will check the level instead of the total xp points",
  "progression.condition.location": "Location",
  "progression.condition.location.locations": "Open this to define a location that the player should be in",
  "progression.condition.location.description": "You must be located:",
  "progression.condition.location.description.inverted": "You cannot be located:",
  "progression.condition.criteria": "Has Criteria",
  "progression.condition.criteria.displayName": "Display Name of the criteria you are checking for",
  "progression.condition.criteria.description": "You need to have completed the following criteria: %s",
  "progression.condition.criteria.description.inverted": "You can't have completed the following criteria: %s",
  "progression.condition.daytime": "Is Daytime?",
  "progression.condition.daytime.description": "It needs to be daytime",
  "progression.condition.daytime.description.inverted": "It needs to be nighttime",
  "progression.condition.isSneaking": "Is Sneaking?",
  "progression.condition.isSneaking.description": "Someone needs to be sneaking",
  "progression.condition.isSneaking.description.inverted": "Someone can't be sneaking",
  "progression.condition.ininventory": "In Inventory",
  "progression.condition.ininventory.stackSize": "This is the amount of this item to check for",
  "progression.condition.ininventory.slotType": "The type of slots to check, click to toggle",
  "progression.condition.ininventory.description.hotbar": "You need to have any of the items shown in your hotbar",
  "progression.condition.ininventory.description.inventory": "You need to have any of the items shown in your inventory",
  "progression.condition.ininventory.description.armor": "You need to be wearing any of the items shown",
  "progression.condition.ininventory.description.held": "You need to be holding any of the items shown in your main hand",
  "progression.condition.ininventory.description.offhand": "You need to be holding any of the items shown in your off hand",
  "progression.condition.ininventory.description.anyhand": "You need to be holding any of the items shown in either of your hands",
  "progression.condition.ininventory.description.hotbar.inverted": "You can't have any of the items shown in your hotbar",
  "progression.condition.ininventory.description.inventory.inverted": "You can't have any of the items shown in your inventory",
  "progression.condition.ininventory.description.armor.inverted": "You can't be wearing any of the items shown",
  "progression.condition.ininventory.description.held.inverted": "You can't be holding any of the items shown in your main hand",
  "progression.condition.ininventory.description.offhand.inverted": "You can't be holding any of the items shown in your off hand",
  "progression.condition.ininventory.description.anyhand.inverted": "You can't be holding any of the items shown either of your hands",
  "progression.condition.points": "Has Points",
  "progression.condition.points.equal": "You need to have exactly %s %s",
  "progression.condition.points.greater": "You need to have more than %s %s",
  "progression.condition.points.greater.equal": "You need to have %s %s or more",
  "progression.condition.points.lesser": "You need to have less than %s %s",
  "progression.condition.points.lesser.equal": "You need to have %s %s or less",
  "progression.condition.points.equal.inverted": "You need to not have exactly %s %s",
  "progression.condition.points.greater.inverted": "You need to have %s %s or less",
  "progression.condition.points.greater.equal.inverted": "You need have less than %s %s",
  "progression.condition.points.lesser": "You need to have %s %s or more",
  "progression.condition.points.lesser.equal": "You need to more than %s %s",
  "progression.condition.points.variable": "ID of the points to check",
  "progression.condition.points.amount": "The number you are validating against",
  "progression.condition.points.amount.greaterThan": "Whether the player should have more points than listed (conflicts with lesserThan)",
  "progression.condition.points.amount.isEqualTo": "Whether the player should have exactly the amount of points listed",
  "progression.condition.points.amount.lesserThan": "Whether the player should have less than the points listed (conflicts with greaterThan)",
  "progression.condition.potioneffect": "Has Potion Effect",
  "progression.condition.potioneffect.filters": "Click to open the potion effect selector",
  "progression.condition.potioneffect.description": "This is what will be displayed to the user in display mode, make sure to describe what potion effects they need",
  "progression.condition.potioneffect.lessThanFalse": "If the potion effects duration is less than this number, this condition will return false instead of true. Make this 0 or less if you want this to always return true where applicable.",
  "progression.condition.timeofday": "Time of Day",
  "progression.condition.timeofday.description": "The time needs to be between %s and %s",
  "progression.condition.timeofday.description.inverted": "The time cannot be between %s and %s",


  "progression.reward": "Results",
  "progression.new.reward": "Add New Result",
  "progression.reward.boolean": "True/False",
  "progression.reward.boolean.description": "Marks %s as %s",
  "progression.reward.boolean.display": "This is the text you wish to display to user in display mode, about the reward",
  "progression.reward.boolean.amount": "Whether the boolean should be set to true or false",
  "progression.reward.boolean.variable": "The 'ID' of the boolean",
  "progression.reward.clear": "Take Item",
  "progression.reward.clear.display": "Lose Item",
  "progression.reward.clear.stackSize": "This is the amount of the item to take",
  "progression.reward.crafting": "Allow Action",
  "progression.reward.criteria": "Criteria",
  "progression.reward.criteria.remove.description": "Removes %s from being completed",
  "progression.reward.criteria.add.description": "Marks %s as being completed",
  "progression.reward.criteria.possibility.description": "Toggles whether %s is possible or not",
  "progression.reward.criteria.remove": "If this is true, the criteria will be removed from the player, if it's false, the criteria will be added",
  "progression.reward.criteria.possibility": "If this is true this will toggle whether the player can actually complete the criteria once again.\\n\\nAn example use would be to remove a criteria that allows you to craft something after you've crafted say five times. By toggling the possibility, you would make that criteria impossible to complete therefore only allowing players to ever craft 5 of something.",
  "progression.reward.criteria.displayName": "This is the display name of the criteria you wish to apply this reward to. It's suggested you use different names for each criteria so that it can find the correct one.",
  "progression.reward.criteria.incorrect": "Reward Criteria was incorrectly setup",
  "progression.reward.criteria.description": "If you have this as anything other than blank, it is what will be shown in display mode",
  "progression.trigger.criteria.displayWidth": "The width of this trigger in display mode",
  "progression.reward.command": "Command",
  "progression.reward.command.execute": "Execute Command",
  "progression.reward.command.description": "The following command will be executed where @u is the player\\n\\n%s",
  "progression.reward.command.command": "This is the command to execute without the leading /",
  "progression.reward.entity": "Spawn Entity",
  "progression.reward.entity.description": "Spawns %s to %s of these entities:",
  "progression.reward.entity.spawnNumber": "The number of entities to spawn",
  "progression.reward.entity.nbtData": "Extra NBT data to spawn the entity with",
  "progression.reward.entity.entities": "Click to open the entity filtering editor\\n\\nWhich allows you to pick the entities that qualify",
  "progression.reward.entity.locations": "Click to open the location selector\\n\\nWhich allows you to select where these entities should spawn",
  "progression.reward.fallDamage": "Fall Resistance",
  "progression.reward.fallDamage.description": "You will be able to survive an additional %s points of fall damage",
  "progression.reward.fallDamage.absorption": "How much fall damage to prevent",
  "progression.reward.giveXP": "XP",
  "progression.reward.giveXP.description": "Receive %s XP",
  "progression.reward.giveXP.amount": "The amount of XP to give the player, If this number is negative it's the levels that will get removed",
  "progression.reward.hurt": "Damage Entity",
  "progression.reward.hurt.description": "Entity is damaged for %s hearts, with the source being %s",
  "progression.reward.hurt.damageSource": "This is the name of the damage source you wish to attack the players with\\n\\nAccepted values are: inFire, lightningBolt, onFire, lava, inWall, drown, starve, cactus, fall, outOfWorld, generic, magic, wither, anvil, fallingBlock",
  "progression.reward.hurt.damage": "This is how many half hearts worth of damage to do",
  "progression.reward.item": "Give Item",
  "progression.reward.item.display": "Item",
  "progression.reward.item.stackSize": "This is the amount of the item to give",
  "progression.reward.placeBlock": "Place Block",
  "progression.reward.placeBlock.description": "Places one of these Blocks:",
  "progression.reward.placeBlock.locations": "Click to open the location selector\\n\\nWhich allows you to select where this block will be placed",
  "progression.reward.points": "Points",
  "progression.reward.points.description": "Receive %s %s",
  "progression.reward.points.amount": "The amount of points to give the player",
  "progression.reward.points.variable": "The 'ID' of the points",
  "progression.reward.potioneffect": "Potion",
  "progression.reward.potioneffect.randomVanilla": "If this is set to true, it will give a random potion effect that you can get from drinking vanilla potions. The effect you get is still determined by which effects you select. So if you select regen and health potions, you will get a random regen or health potion from the vanilla defaults applied to the player.",
  "progression.reward.potioneffect.customid": "This is if you wish to apply a modded potion effect, you should use the potion id here. Set it to -1 or less if you're using the potion selector.",
  "progression.reward.potioneffect.duration": "This is how long the potion effect will last",
  "progression.reward.potioneffect.amplifier": "This is the strength of the potion effect",
  "progression.reward.potioneffect.particles": "This is whether particles should be displayed when the potion is active or not",
  "progression.reward.potioneffect.filters": "Click this to open the potion selector",
  "progression.reward.setFire": "Set Fire",
  "progression.reward.setFire.description": "Sets the entity on fire",
  "progression.reward.spawnItem": "Spawn Item",
  "progression.reward.spawnItem.description": "Spawns %s to %s of these items:",
  "progression.reward.spawnItem.tooltip": "Spawns an item: %s",
  "progression.reward.spawnItem.stackSize": "This is the size of the stack in the entity this should spawn",
  "progression.reward.spawnItem.filters": "Click to open the item filtering editor\\n\\nWhich allows you to pick the items that qualify",
  "progression.reward.spawnItem.locations": "Click to open the location selector\\n\\nWhich allows you to select where these entities should spawn",
  "progression.reward.speed": "Speed",
  "progression.reward.speed.description": "%s extra speed %s",
  "progression.reward.speed.format3": "%s, %s or %s",
  "progression.reward.speed.format2": "%s or %s",
  "progression.reward.speed.never": "Never",
  "progression.reward.speed.air.description": "in air",
  "progression.reward.speed.land.description": "on land",
  "progression.reward.speed.water.description": "in water",
  "progression.reward.speed.speed": "The additional speed factor to add to players\\n\\nYou'll probably want to experiment to see how this affects the player",
  "progression.reward.speed.air": "Whether this should affect speed in the air",
  "progression.reward.speed.land": "Whether this should affect speed on the ground",
  "progression.reward.speed.water": "Whether this should affect speed while in water",
  "progression.reward.stepAssist": "Step Assist",
  "progression.reward.stepAssist.description": "Allows you to step an extra %s blocks",
  "progression.reward.stepAssist.steps": "Number of additional blocks you want players to be able to walk up",
  "progression.reward.tab.show": "Hide/Show Tab",
  "progression.reward.tab.show.invalid": "Invalid Tab Setup",
  "progression.reward.tab.show.description.hide": "Will hide the tab %s",
  "progression.reward.tab.show.description.show": "Will show the tab %s",
  "progression.reward.tab.hideByDefault": "Whether the layer you specify should be hidden by default",
  "progression.reward.tab.displayName": "This is the display name of the tab you wish to apply this reward to. It's suggested you use different names for each tab so that it can find the correct one.",
  "progression.reward.teleport": "Teleport",
  "progression.reward.teleport.description": "Teleports the player to:",
  "progression.reward.teleport.locations": "Click to open the location selector\\n\\nWhich allows you to select where the player should be teleported to",
  "progression.reward.time": "Time",
  "progression.reward.time.add": "Add %s ticks to time\"",
  "progression.reward.time.set": "Set time to %s",
  "progression.reward.time.addTime": "If this is true, time will be added instead of set",
  "progression.reward.time.time": "The time to set the world to",


  "progression.reward.layer.show": "Hide/Show Layer",
  "progression.reward.layer.show.description.hide": "Will hide a layer in the book: %s on page %s",
  "progression.reward.layer.show.description.show": "Will show a layer in the book: %s on page %s",
  "progression.reward.layer.hideByDefault": "Whether the layer you specify should be hidden by default",
  "progression.reward.layer.bookid": "The ID of the Enchiridion Book this applies to",
  "progression.reward.layer.page": "The page this applies to",
  "progression.reward.layer.layer": "The layer this applies to (1 is the layer at the top of the list)",
  "progression.reward.open.book": "Open Book",
  "progression.reward.open.book.description": "Opens the book called %s at page %s",
  "progression.reward.open.book.bookid": "The ID of the Enchiridion Book this applies to",
  "progression.reward.open.book.page": "The page this applies to",


  "progression.action.arcane": "Allow arcane crafting of these items",
  "progression.action.arcaneuse": "Allow arcane crafting to use these items in recipes",
  "progression.action.crafting": "Allow crafting of these items",
  "progression.action.craftinguse": "Allow these items to be used to craft things",
  "progression.action.general": "Allow these items to be placed, or used",
  "progression.action.furnace": "Allow these items to be made in a furnace",
  "progression.action.furnaceuse": "Allow these items to be smelted in a furnace",
  "progression.action.breakblock": "Allow breaking of these blocks",
  "progression.action.breakblockwith": "Allow breaking of blocks with these tools",
  "progression.action.harvestdrop": "Allow these items to drop from blocks",
  "progression.action.harvestdropwith": "Allow blocks to drop when broken with these tools",
  "progression.action.entitydrop": "Allow entities to drop these items",
  "progression.action.entitydropkilledwith": "Allow entities to drop items when killed with these tools",


  "progression.filter": "Filters",
  "progression.filter.block": "Block Selector",
  "progression.filter.item": "Item Selector",
  "progression.filter.entity": "Entity Selector",
  "progression.filter.potioneffect": "Potion Selector",
  "progression.filter.action": "Action Selector",
  "progression.filters": "Filters",
  "progression.new.filter": "Add New Filter",
  "progression.new.item": "Add New Filter",
  "progression.filter.item.itemOnly": "Item Only",
  "progression.filter.item.nbtString": "NBT Match",
  "progression.filter.item.modid": "Mod",
  "progression.filter.item.itemStack": "Item Stacks",
  "progression.filter.item.metadata": "Metadata",
  "progression.filter.item.oreDictionary": "Ore Dictionary",
  "progression.filter.item.tagsingle": "Specific NBT",
  "progression.filter.item.toolType": "Tool Class",
  "progression.filter.item.toolType.tooltype": "The tool class can be shovel, pickaxe, axe",
  "progression.filter.potioneffect.potioneffect": "Potion Effect",
  "progression.filter.potioneffect.potionitem": "Potion Item",
  "progression.filter.block.blockOnly": "Block Only",
  "progression.filter.block.blockStack": "Block Stacks",
  "progression.filter.block.blockState": "Block State",
  "progression.filter.block.blockOre": "Block Ore",
  "progression.filter.block.blockMod": "Block Mod",
  "progression.filter.crafting.exact": "Action",


  "progression.filter.location": "Location Selector",
  "progression.filter.location.playerLook": "Player Look",
  "progression.filter.location.playerLook.reach": "Where the player is looking at, if within reach distance",
  "progression.filter.location.playerLook.blocks": "Where the player is looking at, if within %s blocks",
  "progression.filter.location.playerPos": "Around Player",
  "progression.filter.location.playerPos.description": "Somewhere randomly near the players current location",
  "progression.filter.location.playerBroken": "Last Broken",
  "progression.filter.location.playerBroken.description": "Where the player last broke a block",
  "progression.filter.location.playerAbove": "Above Player",
  "progression.filter.location.playerAbove.description": "Somewhere above/below the players current location",
  "progression.filter.location.randomaround": "Around XYZ",
  "progression.filter.location.randomaround.description": "Randomly around the coordinates %s %s %s",
  "progression.filter.location.dimensionspawn": "Dimension Spawn",
  "progression.filter.location.dimensionspawn.description": "The spawn of the dimension: %s",
  "progression.filter.location.randomx": "Around X",
  "progression.filter.location.randomx.description": "Randomly around the x coordinate %s",
  "progression.filter.location.randomy": "Around Y",
  "progression.filter.location.randomy.description": "Randomly around the y coordinate %s",
  "progression.filter.location.randomz": "Around Z",
  "progression.filter.location.randomz.description": "Randomly around the z coordinate %s",


  "progression.filter.entity.displayName": "Display Name",
  "progression.filter.entity.entityName": "Entity Name",
  "progression.filter.entity.entitytype": "Entity Type",
  "progression.filter.entity.witherskeleton": "Wither Skeleton",
  "progression.filter.entity.entityMod": "Entity Mod",
  "progression.filter.entity.lastHit": "Last Hit",
  "progression.filter.entity.lastKilled": "Last Killed",
  "progression.filter.entity.online": "Everyone Online",



  "progression.item.book": "Progression Book",
  "progression.item.edit": "Progression Editor",
  "progression.item.claim": "Progression Tile Claimer",


  "achievement.criteria": "Criteria Complete",
  "progression.name.display": "Name",
  "progression.tasks": "Tasks",
  "progression.required": "Required",
  "progression.required.all.display": "You need to complete all tasks!",
  "progression.required.amount.display": "You only need to complete %s tasks!",
  "progression.message.data": "Oi matey, be patient, Progression is currently syncing it's data.",
  "progression.message.disabled": "Sorry bud but editing is currently disabled, you're so out of luck.",
  "progression.given": "Given",
  "progression.remove": "Remove",
  "progression.add": "Add",


  "progression.footer.line1": "Use arrow keys to scroll sideways, or use the scroll wheel. (Down to go right)",
  "progression.footer.line2": "Hold shift with arrow keys to scroll faster.",
  "progression.selector.items": "Select Item - Click elsewhere to close",
  "progression.selector.blocks": "Select Block - Click elsewhere to close",
  "progression.popup": "Popup",
  "progression.repeat": "Repeat",
  "progression.hideable.allTasks": "All",
  "progression.hideable.allRewards": "All",
  "progression.hideable.infinite": "Infinite",
  "progression.preview": "Preview",
  "progression.item.free": "Free Item!",
  "progression.completed": "%s%% completed",
  "progression.ability": "Ability Gain!",
  "progression.block.place": "Place a Block!",
  "progression.group": "Team Editor",
  "progression.criteria.save": "Save Template",
  "progression.criteria.save.tooltip": "Clicking this will save this criteria to the criteria templates folder, allowing you to share criteria with others.",


  "progression.criteria.popup": "Popup Displayed",
  "progression.criteria.popup.tooltip": "Whether an achievement style popup will appear for this criteria or not.",
  "progression.criteria.repeat": "Repeatability",
  "progression.criteria.repeat.tooltip": "How many times this criteria can be completed to obtain the rewards given.\\n\\n",
  "progression.criteria.repeat.infinite": "Right click for infinite",
  "progression.criteria.repeat.numbers": "Right click to edit numbers",
  "progression.criteria.icon": "Criteria Icon",
  "progression.criteria.icon.tooltip": "Click to Edit",
  "progression.criteria.tasks": "Tasks Required",
  "progression.criteria.tasks.tooltip": "Number of tasks required to complete this criteria.\\n\\n",
  "progression.criteria.tasks.all": "Right click to make all required",
  "progression.criteria.tasks.amount": "Right click to edit amount",
  "progression.criteria.tasks.completed": "Completed all Tasks!",
  "progression.criteria.rewards": "Rewards Given",
  "progression.criteria.rewards.tooltip": "Number of rewards to give to players on completion of tasks.\\n\\n",
  "progression.criteria.rewards.all": "Right click to give all rewards",
  "progression.criteria.rewards.amount": "Right click to edit amount",


  "progression.isVisible": "Whether this should show up when viewing the criteria in display mode or not",
  "progression.mustClaim": "If this is set to true, rewards will not be automatically rewarded and must instead be claimed somehow",
  "progression.inverted": "If this is true, when checking the condition if everything in the condition is true, it will be considered false, instead of true",
  "progression.truth": "Currently %s",


  "progression.tab.hidden": "Hidden",
  "progression.tab.sort": "Sort Index",
  "progression.tab.shift": "Shift + Click to rename",
  "progression.tab.ctrl": "Ctrl + Click to select item icon",
  "progression.tab.alt": "Alt + Click to make this tab the default",
  "progression.tab.i": "I + Click to hide/unhide",
  "progression.tab.s": "S + Click to save as template",
  "progression.tab.arrow": "Arrow keys to move up/down",
  "progression.tab.delete": "Delete + Click to delete",
  "progression.tab.warning": "Deleting a tab, deletes all criteria in it",
  "progression.tab.new.new": "New",
  "progression.tab.new.new.tab": "New Tab",
  "progression.tab.new.criteria": "Click for a New Criteria",
  "progression.tab.new.tab": "Ctrl click for a New Tab",
  "progression.tab.new.shift": "Shift click to load Criteria Template",
  "progression.tab.new.alt": "Alt click to load Tab Template",
  "progression.tab.new.empty": "You can also double click empty",
  "progression.tab.new.space": "space to insert a new criteria",


  "progression.item.fallResistance": "Fall Resistance",
  "progression.item.onReceivedAchievement": "Complete the Achievement",
  "progression.item.onChangeDimension": "Change Dimension",
  "progression.item.onGUIChange": "Change GUI",
  "progression.item.onSentMessage": "Send Chat Message",
  "progression.item.onSecond": "Every Second",
  "progression.item.onReceivedPoints": "On Receiving Points",
  "progression.item.onReceivedBoolean": "On Receiving True/False",
  "progression.item.onLogin": "Login",


  "progression.action.criteria.claim": "[Progression] Claim Criteria if Possible",
  "progression.action.criteria.complete": "[Progression] Complete Criteria",
  "progression.action.reward": "[Progression] Claim Specific Reward",
  "progression.action.tab.list": "[Progression] Generate Tab List",
  "enchiridion.button.points": "[Progression] Insert Points Display",
  "enchiridion.button.rewards": "[Progression] Insert Rewards Display",
  "enchiridion.button.tasks": "[Progression] Insert Tasks Display",
  "enchiridion.button.criteria": "[Progression] Insert Criteria Display",
  "enchiridion.button.tab": "[Progression] Insert Tab Display",
  "enchiridion.button.action.field.display": "Display Name",
  "enchiridion.button.action.field.background": "Show Background",
  "enchiridion.button.action.field.description": "Description",
  "enchiridion.button.action.field.variable": "Variable",
  "enchiridion.button.action.field.size": "Size",
  "enchiridion.button.action.field.text": "Display Text",
  "enchiridion.button.action.field.showHidden": "Show Hidden",
  "enchiridion.button.action.field.randomReward": "Give Random Reward",
  "enchiridion.button.action.field.rewardPosition": "Reward Number"
}